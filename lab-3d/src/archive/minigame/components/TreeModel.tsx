/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import * as tree from "./../models"

type GLTFResult = GLTF & {
  nodes: {
    Mesh001: THREE.Mesh
    Mesh001_1: THREE.Mesh
    feuille: THREE.Mesh
  }
  materials: {
    ['Material #49']: THREE.MeshPhysicalMaterial
    ['Material #48']: THREE.MeshPhysicalMaterial
    ['Material #47']: THREE.MeshPhysicalMaterial
  }
}

export function TreeModel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(tree.tree) as GLTFResult
  const [color, setColor] = useState("red");
  return (
    <group {...props} dispose={null}>
      <group position={[-0.007, 0, 0.025]} scale={0.01}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh001.geometry}
          material={materials['Material #49']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_1.geometry}
          material={materials['Material #48']}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.feuille.geometry}
        material={materials['Material #47']}
        position={[-0.026, 0.558, 0.046]}
        scale={0.01}
        material-color={color}
        onClick={() => setColor("green")}
      
      />
    </group>
  )
}

useGLTF.preload(tree.tree)